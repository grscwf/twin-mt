:: n1s Say Device 1 [mt-ready] {"position":"6850,1625","size":"100,100"}
<<nobr>>
<<vi-ignore n_candleLit>>
<<vi-ignore n_ivexGone>>
<<em-assert $n_ivexGone || $n_ivexNear || !$n_candleHorny>>

<<set _speaks =
  $n_candleHorny ? "murmurs" :
  $n_ivexGone ? "says" :
  "whispers">>

/* This is also in Help Device, but should only be shown once. */
<<if $n_ivexGone || $n_helpDeviceAsked>>
  /* nothing */
<<elseif $n_candleHorny>>
  Nero is too desperate to care about Ivex hearing him.
<<elseif $n_ivexNear>>
  Ivex is nearby. He will hear what Nero says to the Sprite.
  Well, the panther will probably think
  Nero is mumbling to himself.
  ?P
<<else>>
  Ivex is not nearby.
  He will probably not hear what Nero says to the Sprite.
  ?P
<</if>>

<<if $n_rememberPlease>>
  The wolf _speaks, "Please, Nackle's Poltergeist Device."
  <<if $n_candleHorny>>
    He is not sure the Sprite is ready for such an adventurous
    dildo, but nothing else in the room seems adequate for
    their shared desire.
  <</if>>

<<elseif $n_candleHorny>>
  The wolf _speaks to the Sprite, his newest friend.
  "Nackle's Poltergeist Device!"
  ?P
  It does not respond. The wolf is disappointed.
  He tries again, "Please! Nackle's Poltergeist Device!"

<<else>>
  The wolf _speaks, "Nackle's Poltergeist Device."
  ?P
  The Sprite does not respond. A moment later,
  Nero mentally kicks himself
  for forgetting the Sprite's word of command.
  It's a novice mistake.
  It's an understandable mistake,
  since he <em>is</em> a little distracted by
  <<= $n_candleLit ? "the flickering red candle" : "his current situation">>.
  Still, he's quite embarrassed, and he's thankful that the panther
  <<if $n_ivexGone>>
    is not here to witness it.
  <<elseif $n_ivexNear>>
    is unlikely to realize he's talking to the Sprite.
  <<else>>
    is not close enough to hear the mistake.
  <</if>>
  ?P
  Nero tries again. "Please, Nackle's Poltergeist Device."
<</if>>

<<switch $n_ivexContext>>
<<case `IC_gone`>>
  <<em-assert $n_ivexGone>>
  <<vi-ignore n_candleLit>>
  /* nothing */
<<case `IC_distant`>>
  <<em-assert !$n_ivexNear>>
  <<vi-ignore n_candleLit>>
  ?P
  Ivex notices the whispering. "What was that you said?"
<<case `IC_guildName`>>
  <<vi-always n_candleLit false>>
  ?P
  Ivex snorts. "That is a terrible name for a guild.
  Are you sure that's right?"
<<case `IC_mindControl`>>
  <<vi-always n_candleLit false>>
  ?P
  Ivex frowns. "Are you suggesting the guild's secret is
  kept with telekinesis?"
<<case `IC_explainTheft` `IC_obeyMe` `IC_lickPaw` `IC_begForMe`>>
  <<vi-always n_candleLit false>>
  ?P
  Ivex laughs. "Are you so eager to feel the power of my device?"
<<case `IC_comfortable` `IC_whoSentYou`>>
  <<vi-always n_candleLit true>>
  ?P
  Ivex laughs beneath his grinning mask.
  "Already eager to feel the power of my device?"
<<default>>
  <<run throw new Error(`unhandled ivexContext ${$n_ivexContext}`)>>
<</switch>>

?P
The Sprite responds in Nero's ear,
<span class=sprite-q>"There are several in this room,
so you'll have to be more specific, ?master
Tell me the name of the one you want to contact, ?master"</span>

?P
Nero shakes his head.
<<if $n_candleHorny>>
  The Sprite is not being helpful.
  Its response was noticeably passive-aggressive.
  The wolf is feeling doubts about continuing this relationship.
<<else>>
  It's not so odd to have several
  Nackle devices on different hidden surfaces in a room,
  so that a magician can use whichever one is convenient as
  they move about.
  ?P
  But the response from the Sprite suggests that the wolf will be
  able to use Nackle's device <em>without</em> touching it.
  And if that's the case, why would Ivex have more than one
  in this room? Are the other ones <em>also</em> inscribed on
  enormous horse dildos, stored away in a cabinet somewhere?
  ?P
  What a strange person this panther is.
  ?P
  <<if $n_bottleNameKnown>>
    Well, Nero <em>does</em> know the name of that Nackle's device.
    Unfortunately.
  <<else>>
    Nero will have to trick him somehow into revealing the name
    of that Nackle's device.
  <</if>>
<</if>>

?P
$n_afterAction

<<run
  $n_magicPhase = MP_wantName;
  $n_magicPhaseReached = MP_wantName;
  $n_rememberPlease = true;
>>
<</nobr>>
