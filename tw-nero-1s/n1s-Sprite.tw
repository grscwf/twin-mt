:: n1s Sprite [mt-ready inclusion] {"position":"4225,600","size":"200,100"}
<<nobr>>

<<set if (MP_exitingHold === $n_magicPhase) {
  if ($n_passTried.length === 4) {
    $n_magicPhase = MP_lockedOut;
  } else {
    $n_magicPhase = MP_wantPass;
  }
}
>>

<<if $n_candleHorny>>
  <<switch MT.pick([0, 1, 2])>>
  <<case 0>>
    The burr in the Sprite's voice leaves an
    unbearable flutter in Nero's ear.
  <<case 1>>
    The Sprite is a sexy, androgynous voice
    <<= $n_spriteQuiet ? "whispering" : "reverberating">>
    in Nero's head.
  <<case 2>>
    The Sprite ?sprSpeaks slowly in Nero's ear, with erotic urgency lurking
    in every syllable.
  <</switch>>
<<else>>
  The Sprite
  <<if MP_contact === $n_magicPhase>>
    reminds Nero,
  <<elseif $n_spriteSaidPhase === $n_magicPhase>>
    repeats in Nero's ear,
  <<else>>
    ?sprSpeaks in Nero's ear.
  <</if>>
<</if>>

<<switch $n_magicPhase>>
<<case `MP_wantDevice`>>
  <span class=sprite-q>"Which device in this room do you wish
  to contact, ?masterQ"</span>
  <<if _patience <= 0>>
    /* nothing */
  <<elseif $n_bottleViewed>>
    <<if $n_candleHorny>>
      The wolf only knows one device in this room. Nackle's device
      is somewhat of a bold choice for a new relationship,
      but there does not seem to be anything else available.
    <<else>>
      The wolf wonders if the Sprite can contact Nackle's device.
    <</if>>
    <<set _please = $n_rememberPlease ? "Please, " : "">>
    <<set $n_magicAction =
      `<<mtl [[n1s Say Device]]>>`
      + `Tell the Sprite, "${_please}Nackle's Poltergeist Device."`
      + `<</mtl>>`>>
  <<elseif !$n_helpDeviceAsked>>
    <<if $n_candleHorny>>
      The request is somewhat forward for such a new relationship,
      but the wolf is quite happy that it <em>is</em> a relationship.
    <<else>>
      The wolf is unsure exactly what that means. Perhaps it's a way
      for him to use a magic device?
    <</if>>
    <<set $n_magicAction =
      `<<mtl [[n1s Help Device]]>>`
      + `Ask the Sprite for help.`
      + `<</mtl>>`>>
  <<elseif $n_candleHorny>>
    The teasing innuendo in the Sprite's tone is impossible to ignore.
    The wolf desperately looks around the room for a device that will
    satisfy their shared desire.
  <<else>>
    The wolf wishes the Sprite had been instructed to be more helpful.
    There must be <em>some</em> device in the room that he can contact.
  <</if>>

<<case `MP_wantName`>>
  <span class=sprite-q>"Which device in this room do you wish
  to contact, ?masterQ"</span>
  <<if _patience <= 0>>
    /* nothing */
  <<elseif $n_bottleNameKnown>>
    ?P
    <<if $n_candleHorny>>
      Its earlier dismissal of Nackle was disheartening.
      But perhaps the Sprite misunderstood the wolf's intent.
      He wants merely an <em>introduction</em> to the horse cock
      that the Sprite already knows.
    <<else>>
      The wolf hesitates to say the name aloud.
    <</if>>
    <<set $n_magicAction =
      `<<mtl [[n1s Say Lance]]>>`
      + `Tell the Sprite, "Please, Lance Rockhard."`
      + `<</mtl>>`>>
  <<elseif !$n_helpDeviceAsked>>
    <<if $n_candleHorny>>
      The wolf is unsure of this relationship. It is not progressing
      as quickly as he likes. But the Sprite seems
      willing to continue to try.
    <<else>>
      "Nackle's Device" was not specific enough.
      The wolf will need to tell
      the Sprite a name that Ivex has given to his devices.
    <</if>>
    <<set $n_magicAction =
      `<<mtl [[n1s Help Device]]>>`
      + `Ask the Sprite, "Please, help!"`
      + `<</mtl>>`>>
  <<elseif $n_candleHorny>>
    All of them, of course, but the wolf knows that the Sprite is
    not yet ready for that.
    <<if $n_ivexGone>>
      Perhaps Ivex could have suggested the right one to start with.
      The wolf's cock strains uncomfortably at the thought.
    <<else>>
      The wolf will have to choose a name to whisper to the Sprite.
    <</if>>
  <<elseif $n_ivexGone>>
    Unfortunately, the wolf sees no way of guessing what names
    Ivex has given to his devices. The Sprite is a useless annoyance now.
  <<else>>
    The imitation of helpfulness is annoying.
    The wolf will have to trick Ivex into revealing the name of a device.
  <</if>>

<<case `MP_wantTouch`>>
  <span class=sprite-q>"Please touch my hole, ?master"</span>
  <<if _patience <= 0>>
    /* nothing */
  <<elseif !$n_helpTouchAsked>>
    <<if $n_candleHorny>>
      The wolf is fascinated by thoughts of where this hole might be.
    <<else>>
      The wolf wonders where this hole might be.
    <</if>>
    <<set $n_magicAction =
      `<<mtl [[n1s Help Touch]]>>`
      + `Ask the Sprite, "Please, help!"`
      + `<</mtl>>`>>
  <<elseif $n_candleHorny>>
    The wolf would love to. Why doesn't the Sprite understand that he
    <em>can't</em> without its help?
  <<elseif $n_ivexGone>>
    The wolf has no way to touch any hole,
    now that Ivex is gone.
    The Sprite's pestering is annoying.
  <<else>>
    There must be some way to trick Ivex into touching the right hole.
  <</if>>

<<case `MP_wantPass`>>
  <span class=sprite-q>"Please say your password, ?master"</span>
  <<if _patience > 0>>
    ?P
    <<switch JSON.parse($n_passTried || "[]").length>>
    <<case 1>>
      <<if $n_candleHorny>>
        Nero remembers the Sprite has set firm boundaries for this
        courtship. He has only two more chances to discover the
        password to its heart.
      <<else>>
        Nero has two guesses remaining.
        Not as many as he'd like, but better than nothing.
      <</if>>
    <<case 2>>
      <<if $n_candleHorny>>
        Nero is feeling desperate. Opportunity is slipping through his
        grasp. He has only one more chance to unlock the Sprite's love.
      <<else>>
        Nero only has one guess remaining.
        He'd better make it a good one.
      <</if>>
    <<case 3>>
      <<if $n_candleHorny>>
        Nero feels embarrassment. He has zero tries remaining.
        Is the Sprite mocking him? Well, he will keep on trying anyway.
      <<else>>
        Nero now has zero guesses remaining?
        It probably means there is not actually
        a limit to the number of guesses.
      <</if>>
    <<default>>
      <<run throw new Error(`bug: passTried length ${$n_passTried}`)>>
    <</switch>>
    <<set $n_magicAction =
      `<<mtl [[n1s Guess Password]]>>`
      + `Guess a password.`
      + `<</mtl>>`>>
  <</if>>


<<case `MP_onHold`>>
  <<include [[n1s On Hold]]>>

<<case `MP_contact`>>
  <<include [[n2f Use Lance]]>>

<<case `MP_lockedOut`>>
  <<include [[n1s Locked Out]]>>

<<default>>
  <<run throw new Error(`BUG: sprite magicPhase ${$n_magicPhase}`)>>
<</switch>>

<<set $n_spriteSaidPhase = $n_magicPhase>>
<</nobr>>\
