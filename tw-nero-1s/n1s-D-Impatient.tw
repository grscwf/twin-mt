:: n1s/D Impatient {"position":"6575,3775","size":"100,100"}
<<nobr>>
<<vi-always n2_free false>>
<<em-assert $n2_ivexGone || $t_ivexNear || !$n1_candleHorny>>

<style>
  .impatient-overrun {
  letter-spacing: -1px;
  margin-right: .4em;
  word-spacing: -2px;
  }
</style>

<<em-assert $n1_magicPhase === MP_onHold>>

<<script>>
  const V = State.variables;
  const T = State.temporary;
  V.n1_passTried || (V.n1_passTried = ["placeholder for testing"]);
  T.pw = V.n1_passTried[0].replace(/^#/, "");
  T.isWrong = "is not the correct password, ?master";
  if (Nero.oldPasswords[T.pw]) {
    T.isWrong = Nero.oldPasswords[T.pw];
  }
<</script>>

<<switch $n1_passTried.length>>
<<case 1>>
  <<if $n1_candleHorny>>
    Nero whines, "Please, be quiet!"
  <<else>>
    Nero whispers, "Please, be quiet!"
  <</if>>

  <<switch $t_ivexContext>>
  <<case `IC_gone`>>
    <<vi-ignore n1_candleLit>>
    /* nothing */
  <<case `IC_distant`>>
    <<vi-ignore n1_candleLit>>
    ?P
    Ivex notices the wolf whispering. "You must speak louder!"
  <<case `IC_explainTheft`>>
    <<vi-always n1_candleLit false>>
    ?P
    Ivex snorts. "Is my questioning affecting your ability to invent
    a plausible story?"
  <<case `IC_lickPaw`>>
    <<vi-always n1_candleLit false>>
    ?P
    Ivex frowns. "This is not a difficult thing I ask.
    What traumas in your mind have I touched?"
  <<case `IC_begForMe`>>
    <<vi-always n1_candleLit false>>
    ?P
    Ivex says seriously, "Thinking will not help you make this choice.
    Do you never listen to your instincts?"
  <<case `IC_comfortable`>>
    <<vi-always n1_candleLit true>>
    ?P
    Ivex shouts through his mask. "Are! You! Comfortable!"
  <<case `IC_whoSentYou`>>
    <<vi-always n1_candleLit true>>
    ?P
    Ivex leans in close and speaks softly in Nero's ear.
    "Who. Sent. You."
  <<default>>
    <<run throw new Error(`unhandled ivexContext ${$t_ivexContext}`)>>
  <</switch>>

  <<set $n1_spriteQuiet = true>>
  ?P
  The Sprite whispers in Nero's ear,
  <span class=sprite-q>"Quiet mode activated, ?master"</span>

  ?P
  Nero winces. The Sprite is now speaking softly,
  except that it's saying
  <span class=sprite-q>"?mastern"</span> louder than before.
  The panther has messed up the Sprite's instructions in
  strange ways.

<<case 2>>
  <<if $n1_candleHorny>>
    Nero whines, "Please, faster!"
  <<else>>
    Nero whispers, "Please, hurry up!"
  <</if>>

  <<switch $t_ivexContext>>
  <<case `IC_gone`>>
    <<vi-ignore n1_candleLit>>
    /* nothing */
  <<case `IC_distant`>>
    <<vi-ignore n1_candleLit>>
    ?P
    XXX
  <<case `IC_explainTheft`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX
  <<case `IC_lickPaw`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX
  <<case `IC_begForMe`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX
  <<case `IC_comfortable`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX
  <<case `IC_whoSentYou`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX
  <<default>>
    <<run throw new Error(`unhandled ivexContext ${$t_ivexContext}`)>>
  <</switch>>


  ?P
  XXX Sprite, ok, changing music speed

  ?P
  Nero regrets.

<<case 3>>
  <<if $n1_candleHorny>>
    Nero whines, "Please, stop the music!"
  <<else>>
    Nero whispers, "Please, stop the music!"
  <</if>>

  <<switch $t_ivexContext>>
  <<case `IC_gone`>>
    <<vi-ignore n1_candleLit>>
    /* nothing */
  <<case `IC_distant`>>
    <<vi-ignore n1_candleLit>>
    ?P
    XXX
  <<case `IC_explainTheft`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX
  <<case `IC_lickPaw`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX
  <<case `IC_begForMe`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX
  <<case `IC_comfortable`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX
  <<case `IC_whoSentYou`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX
  <<default>>
    <<run throw new Error(`unhandled ivexContext ${$t_ivexContext}`)>>
  <</switch>>

  ?P
  XXX Sprite, ok, switching music to "Stop the Music, ?master"

  ?P
  Nero regrets.

<<default>>
  <<run throw new Error(`BUG: impatient passTried ${$n1_passTried.length}`)>>
<</switch>>

?P
A moment later, the Sprite ?sprSays,
<span class=sprite-q>"<em><<= _pw>></em> <<= _isWrong>></span>

<<switch $n1_passTried.length>>
<<case 1>>
  <span class=sprite-q>You have two tries remaining, ?master"</span>
  <<set $n1_magicPhase = MP_wantPass>>

  ?P
  This is a bit concerning. Nero was hoping
  that he'd have more than two attempts at guessing the password.
  Well, two is still better than none,
  and <em>possible</em> is infinitely more likely than <em>impossible</em>.

<<case 2>>
  <span class=sprite-q>You have one <span class=impatient-overrun>
    look up the singular form of the
    verb tries and use it here and remind me to figure out how
    to bind the Sprite to my voice
    in case I ever capture a mage that knows how
    to activate it
  </span>
  remaining, ?master"</span>
  <<set $n1_magicPhase = MP_wantPass>>

  XXX nero thoughts

<<case 3>>
  XXX zero tries remaining
  <<set $n1_magicPhase = MP_wantPass>>

  XXX nero thoughts

<<case 4>>
  XXX no more tries
  <<set $n1_magicPhase = MP_lockedOut>>

  XXX nero thoughts

<<default>>
  <<run throw new Error(`unexpected passTried ${$n1_passTried.length}`)>>
<</switch>>

?P
$t_afterAction

/* n1_magicPhase is set above */
<</nobr>>
