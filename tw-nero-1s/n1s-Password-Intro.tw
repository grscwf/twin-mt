:: n1s Password Intro [mt-ready] {"position":"6475,725","size":"100,100"}
<<nobr>>
<<vi-always n_ivexGone false>>
<<vi-ignore n_candleLit>>

The Sprite speaks again.
<span class=sprite-q>"That password doesn't sound right, ?master
Please hold while I double-check it, ?master"</span>
It starts humming a cheerful children's song.

?P
Nero suppresses another sigh. Apparently the Sprite interpreted
something he said as the password, <em>without</em> him
saying "Please" first. The wolf will have to be careful
for the next attempt.

?P
What could the panther's password be?
If Nero's lucky, the password will be something like
"Password" or "Ivex the Magnificent". Or perhaps it's the school
he attended, "Ransamaran Ivory".

?P
Those are all a bit obvious, and surely Ivex is a little more clever
than that? Well, hopefully not too clever, or else Nero will never
be able to guess the password.

?P
Most people have difficulty remembering random passwords, so they
will choose something familiar or near at hand that seems obscure
enough in their own mind. They're usually wrong.
A clever investigator can often deduce such passwords with a
little research into the person.

?P
And Nero is in Ivex's private study!
There are <em>many</em> things here that Ivex might consider private.
The wolf already knows a few.

?P
There's the name of his penguin, "Hunter Too".
<<if $n_wandViewed>>
  Some mages also give names to their magic wands.
<</if>>
And unfortunately, the horse cock,
"Lance Rockhard", is also a plausible choice.

<<set _list = () => {
  const V = State.variables;
  const a = [];

  if (V.n_paintingKnown) {
    a.push(`The pantheress in that painting, his mother, is named "Ivy".`);
  } else if (V.n_paintingViewed) {
    a.push(`The name of the pantheress in that painting might be`
      + ` meaningful to the panther.`);
  }

  if (V.n_booksViewed) {
    a.push(`The "Class of 621" book might be an earlier school he attended.`);
  }

  if (V.n_globeViewed) {
    a.push(`That snow globe labeled "Caverns of`
      + ` <span class=nobr>L&mdash;"</span>`
      + " might be from the panther's favorite vacation spot.");
  }

  if (V.n_mapViewed) {
    a.push(`The map on the wall has "Uramos" and another village marked,`
      + ` which is probably important in some way.`);
  }

  let mkp = "?P ";
  mkp += a.join(" ");

  switch (a.length) {
    case 0:
      mkp += " The room also has plenty of other things";
      mkp += " that might have clues to Ivex's password.";
      break;
    case 1:
      mkp += " And the room has plenty of other things";
      mkp += " that might have clues to Ivex's password.";
      break;
    case 2: case 3:
      mkp += " ?P The room also has some other things";
      mkp += " that might have clues to Ivex's password.";
      break;
    case 4:
      mkp += " ?P The room might have other clues to Ivex's password,";
      mkp += " but Nero already knows plenty of possibilities to try.";
      break;
    default:
      throw new Error(`unexpected length ${a.length}`);
  }

  return mkp;
}
>>

<<= _list()>>

?P
$n_afterAction

<<run
  delete $n_dimBooks;
  delete $n_dimMap;
  delete $n_dimPainting;
  delete $n_dimPenguin;
  delete $n_dimWand;
  delete $n_ivexNear;
  delete $n_penguinCoinDropped;
  $n_magicPhase = MP_onHold;
  $n_magicPhaseReached = MP_wantPass;
  $n_passTried = '["#I Dearly Loved My First Familiar As Well"]';
  $n_penguinTouched = true;
>>

<</nobr>>
