:: n1s Zero Bound [mt-ready] {"position":"4625,1050","size":"100,100"}
<<nobr>>
<<vi-always n_magicPhase `MP_wantPass`>>
<<vi-ignore n_candleLit>>
<<vi-ignore n_ivexGone>>
<<em-assert !$n_candleHorny || $n_ivexNear || $n_ivexGone>>

Unexpectedly, the Sprite whispers,
<b id="clue-cut"></b>
<span class=sprite-q>"Please say your password, ?master"</span>

?P
<<if $n_candleHorny>>
  Nero is delighted! He still has a chance!
  He vows to make the best of this unexpected reprieve.

  ?P
  He will offer the Sprite <em>every</em> password that he can.
  He will slowly and gently seduce the Sprite to his cause.

<<else>>
  Nero is delighted! He has another chance!
  Apparently,
  <em>zero tries remaining</em>
  does not actually
  prevent him from trying another password.

  ?P
  This is a fairly common problem that students have
  when instructing a Sprite.
  Telling a Sprite a sequence of steps is straightforward,
  but once the instructions involve steps that repeat
  or vary under different conditions,
  it becomes difficult to instruct the Sprite
  to perform an intended task correctly.
  Success usually requires testing the Sprite quite
  thoroughly, and scolding it for any mistakes.

  ?P
  Ivex is clearly not very skilled at instructing Sprites.
  What a lucky break!

  ?P
  Since the Sprite did not stop asking at zero,
  it's likely that it will <em>never</em> stop asking.
  This mistake will allow Nero to make as many guesses
  as he wants!
<</if>>

?P
$n_afterAction

<</nobr>>
