:: n1s-F Impatient {"position":"6600,3725","size":"100,100"}
<<nobr>>
<<vi-always n1_magicPhase `MP_onHold`>>
<<vi-always n2_free false>>
<<vi-ignore n2_ivexGone>>
<<em-assert !$n1_candleHorny || $t_ivexNear || $n2_ivexGone>>

<<set $n1_holdPhase || ($n1_holdPhase = 1)>>

<<switch $n1_holdPhase>>
<<case 1>>
  <<if $n1_candleHorny>>
    Nero whines, "Please, be quiet!"
  <<else>>
    Nero whispers, "Please, be quiet!"
  <</if>>

  <<switch $t_ivexContext>>
  <<case `IC_gone`>>
    <<vi-ignore n1_candleLit>>
    /* nothing */
  <<case `IC_distant`>>
    <<vi-ignore n1_candleLit>>
    ?P
    Ivex notices. "What did you say? You must speak louder!"
  <<case `IC_explainTheft`>>
    <<vi-always n1_candleLit false>>
    ?P
    Ivex snorts. "Is my questioning affecting your ability to invent
    a plausible story?"
  <<case `IC_lickPaw`>>
    <<vi-always n1_candleLit false>>
    ?P
    Ivex frowns. "This is not a difficult thing I ask.
    What traumas in your mind have I touched?"
  <<case `IC_begForMe`>>
    <<vi-always n1_candleLit false>>
    ?P
    Ivex says seriously, "Thinking will not help you make this choice.
    Do you never listen to your instincts?"
  <<case `IC_comfortable`>>
    <<vi-always n1_candleLit true>>
    ?P
    Ivex shouts through his mask. "Are! You! Comfortable!"
  <<case `IC_whoSentYou`>>
    <<vi-always n1_candleLit true>>
    ?P
    Ivex leans in close and speaks softly in Nero's ear.
    "Who. Sent. You."
  <<default>>
    <<run throw new Error(`unhandled ivexContext ${$t_ivexContext}`)>>
  <</switch>>

  <<set $n1_spriteQuiet = true>>
  ?P
  The Sprite whispers in Nero's ear,
  <span class=sprite-q>"Quiet mode activated, ?master"</span>

  ?P
  <<if $n1_candleHorny>>
    XXX horny.
  <<else>>
    Nero winces. The Sprite spoke softly,
    except that it said
    <span class=sprite-q>"?masterN"</span> louder than before.
    The panther has messed up the Sprite's instructions in
    strange ways.
    ?P
    A moment later, the Sprite ?sprSays,
  <</if>>

<<case 2>>
  <<if $n1_candleHorny>>
    Nero whines, "Please, faster!"
  <<else>>
    Nero whispers, "Please, hurry up!"
  <</if>>

  <<switch $t_ivexContext>>
  <<case `IC_gone`>>
    <<vi-ignore n1_candleLit>>
    /* nothing */
  <<case `IC_distant`>>
    <<vi-ignore n1_candleLit>>
    ?P
    Ivex is adjusting his pants at the crotch
    and does not notice Nero's whisper.
  <<case `IC_explainTheft`>>
    <<vi-always n1_candleLit false>>
    ?P
    Ivex laughs. "Are you trying to cajole your own sluggish brain now?"
  <<case `IC_lickPaw` `IC_begForMe`>>
    <<vi-always n1_candleLit false>>
    ?P
    Ivex smirks. "Are you so eager to become an apprentice?
    But I must know that you can follow my pace.
    Rushing can be dangerous."
  <<case `IC_comfortable`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX ivex response
  <<case `IC_whoSentYou`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX ivex response
  <<default>>
    <<run throw new Error(`unhandled ivexContext ${$t_ivexContext}`)>>
  <</switch>>

  ?P
  The Sprite whispers in Nero's ear,
  <span class=sprite-q>"Changing music speed to four ex, ?master"</span>

  ?P
  <<if $n1_candleHorny>>
    XXX horny.
  <<else>>
    Nero grimaces, but the Sprite does not resume its humming.
    Instead, it says,
  <</if>>

<<case 3>>
  <<if $n1_candleHorny>>
    Nero whines, "Please, stop the music!"
  <<else>>
    Nero whispers, "Please, stop the music!"
  <</if>>

  <<switch $t_ivexContext>>
  <<case `IC_gone`>>
    <<vi-ignore n1_candleLit>>
    /* nothing */
  <<case `IC_distant`>>
    <<vi-ignore n1_candleLit>>
    ?P
    Ivex twitches an ear, but otherwise shows no sign of
    hearing or understanding what the wolf said.
  <<case `IC_explainTheft`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX ivex response
  <<case `IC_lickPaw`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX ivex response
  <<case `IC_begForMe`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX ivex response
  <<case `IC_comfortable`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX ivex response
  <<case `IC_whoSentYou`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX ivex response
  <<default>>
    <<run throw new Error(`unhandled ivexContext ${$t_ivexContext}`)>>
  <</switch>>

  ?P
  The Sprite whispers in Nero's ear,
  <span class=sprite-q>"Ok, I will start singing the song
  <em>Stop the Music,</em> ?master"</span>

  ?P
  <<if $n1_candleHorny>>
    XXX horny.
  <<else>>
    Nero sighs. He prepares to suffer some other
    silly tune, but the Sprite does not start singing yet.
    Instead, it whispers,
  <</if>>

<<case 4>>
  <<if $n1_candleHorny>>
    Nero whines, "Please, ENOUGH!"
  <<else>>
    Nero whispers, "Please, ENOUGH!"
  <</if>>

  <<switch $t_ivexContext>>
  <<case `IC_gone`>>
    <<vi-ignore n1_candleLit>>
    /* nothing */
  <<case `IC_distant`>>
    <<vi-ignore n1_candleLit>>
    ?P
    XXX ivex response
  <<case `IC_explainTheft`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX ivex response
  <<case `IC_lickPaw`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX ivex response
  <<case `IC_begForMe`>>
    <<vi-always n1_candleLit false>>
    ?P
    XXX ivex response
  <<case `IC_comfortable`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX ivex response
  <<case `IC_whoSentYou`>>
    <<vi-always n1_candleLit true>>
    ?P
    XXX ivex response
  <<default>>
    <<run throw new Error(`unhandled ivexContext ${$t_ivexContext}`)>>
  <</switch>>

  ?P
  The Sprite goes silent.

  ?P
  XXX horny.
  Nero is relieved, but then the Sprite says,


<<default>>
  <<run throw new Error(`BUG: impatient holdPhase ${$n1_holdPhase}`)>>
<</switch>>

<span class=sprite-q>"?sprBadPass remaining, ?master"</span>

<<switch $n1_passTried.length>>
<<case 1>>
  <<set $n1_magicPhase = MP_wantPass>>

  ?P
  <<if $n1_candleHorny>>
    XXX horny
  <<else>>
    This is a bit concerning. Nero was hoping
    that he'd have more than two attempts at guessing the password.
    Well, two is still better than none,
    and <em>possible</em> is infinitely more likely than
    <em>no chance at all</em>.
  <</if>>

  ?P
  $t_afterAction

<<case 2>>
  <<set $n1_magicPhase = MP_wantPass>>

  ?P
  <<if $n1_candleHorny>>
    XXX horny
  <<else>>
    Nero did not catch all the words that the Sprite said quickly,
    but the important part is that he has only one guess remaining.
    He had better make it a good one.
    The wolf thinks carefully about his remaining candidates for
    Ivex's password.
  <</if>>

  ?P
  $t_afterAction

<<case 3>>
  <<set $n1_magicPhase = MP_wantPass>>

  <<if $n1_candleHorny>>
    XXX horny
  <<else>>
    ?P
    Disappointing, but not unexpected.
    Getting the right password in such few tries was a long shot.

    ?P
    Access to Nackle's Device would have been quite useful. But no matter.
    There are certainly other ways of escaping.
  <</if>>

  ?P
  [[Continue|n1s-F Zero Bound]]

<<case 4>>
  <<set $n1_magicPhase = MP_lockedOut>>

  ?P
  <<if $n1_candleHorny>>
    XXX horny
  <<else>>
    The wolf sighs. Apparently he did <em>not</em> have unlimited guesses.
    The Sprite's flaw is not the common "Mistaken Condition" error,
    but the almost as common "Miscounting By One" error. Ah well.
  <</if>>

  ?P
  [[Continue|n1s-F Pass Failed]]

<<default>>
  <<run throw new Error(`unexpected passTried ${$n1_passTried.length}`)>>
<</switch>>

/* n1_magicPhase is set above */
<<set $n1_holdPhase++>>
<</nobr>>
