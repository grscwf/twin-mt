:: n1s Say Password [mt-ready] {"position":"4925,1050","size":"100,100"}
<<nobr>>
<<vi-ignore n_ivexGone>>

<<set _numTried = JSON.parse($n_passTried || "[]").length>>
<<mt-assert _numTried >= 1>>
<<mt-assert _numTried <= 3>>

<<run
  if (_isTranscript && !$n_ivexContext) {
    $n_ivexContext = IC_gone;
  }
>>

<<if $n_candleHorny>>
  <<switch _numTried>>
  <<case 1>>
    The wolf's first offering was clearly a mistake.
    He whines to the Sprite, "$n_passToTry".
    This one is much better. He hopes the Sprite will like it.

  <<case 2>>
    The wolf is feeling opportunity slipping away.
    But he's confident now he knows the <em>best</em> password of them all.
    He whines to the Sprite, "$n_passToTry".
    It <em>must</em> be acceptable.
    He not know what he will do if the Sprite rejects this,
    his finest idea.
  
  <<case 3>>
    The wolf is glad that the Sprite was not put off by
    his earlier failures,
    and he's excited to present a new idea,
    one that's far superior to all the others.
    He whines to the Sprite, "$n_passToTry".
  <</switch>>

<<else>>
  <<switch _numTried>>
  <<case 1>>
    Nero is not certain of this choice, but he does get to try again,
    and choosing an action is better than failing to act from indecision.
    He whispers to the Sprite, "$n_passToTry".
  
  <<case 2>>
    This is Nero's last chance. He's considered several possibilities,
    and this one is clearly better than the rest.
    He hesitates another moment,
    then whispers with confidence, "$n_passToTry".

  <<case 3>>
    Nero can be methodical about his guesses now.
    He whispers to the Sprite, "$n_passToTry".
  <</switch>>
<</if>>

<<if PW_hunter === $n_passToTry>>
  ?P
  The Sprite ?sprSays,
  <span class=sprite-q>"Did you mean
  <em>Hunter Two</em> or <em>Hunter Two</em>, ?masterQ"</span>

  ?P
  <<if $n_candleHorny>>
    Nero groans. Is it not obvious which one is in the room?
    He spells it out, "T-O-O".
  <<else>>
    Nero assumes that the Sprite was asking about "Two" or "Too",
    and hopefully <em>not</em> "To".
    He spells it out, "T-O-O".
  <</if>>

  <<set $n_passToTry = PW_too>>
<</if>>

<<switch $n_ivexContext>>
<<case `IC_gone`>>
  <<mt-assert $n_ivexGone>>
  <<vi-ignore n_candleLit>>
  /* nothing */

<<case `IC_distant`>>
  <<mt-assert !$n_ivexNear>>
  <<vi-ignore n_candleLit>>
  ?P
  Ivex seems to notice the whispering, but he merely shakes his head.

<<case `IC_guildName`>>
  <<vi-always n_candleLit false>>
  ?P
  <<switch $n_passToTry>>
  <<case `PW_ivex`>>
    Ivex snorts. "Flattering, but I do not think <em>that</em>
    is the name of your... secret guild of mages."
  <<default>>
    Ivex snorts. "That's an unusual name for a... secret guild of mages."
  <</switch>>

<<case `IC_mindControl`>>
  <<vi-always n_candleLit false>>
  ?P
  <<switch $n_passToTry>>
  <<case `PW_ransamaran`>>
    Ivex frowns. "That school does not teach anything beyond
    the basics of mind control."
  <<default>>
    Ivex frowns. "Do not change the subject.
    This is critical information that I need to know."
  <</switch>>

<<case `IC_explainTheft`>>
  <<vi-always n_candleLit false>>
  ?P
  <<switch $n_passToTry>>
  <<case `PW_fuckToy`>>
    Ivex says, "There will be plenty of time for that later.
    Or do you want me to demonstrate it now?"
  <<case `PW_hunter`>>
    Ivex growls. "Do not tell lies about my penguin!"
  <<case `PW_ivy`>>
    Ivex growls. "Do not tell lies about my mother!"
  <<case `PW_ivex`>>
    Ivex says, "I'm glad you're using my proper title,
    but you still must explain why you stole my dossier."
  <<case `PW_lance`>>
    Ivex says, "There will be plenty of time for that later.
    Or do you want me to introduce him to you now?"
  <<case `PW_ransamaran`>>
    Ivex says, "Are you now claiming that you obtained my dossier
    from the school that wrongly expelled me?"
  <<default>>
    Ivex says, "That is not a sensible explanation for why
    you stole my dossier. You must elaborate."
  <</switch>>

<<case `IC_obeyMe`>>
  <<vi-always n_candleLit false>>
  ?P
  <<switch $n_passToTry>>
  <<default>>
    Ivex shakes his head.
    "This is not the time for strange jokes.
    We must understand each other clearly."
  <</switch>>

<<case `IC_lickPaw`>>
  <<vi-always n_candleLit false>>
  ?P
  <<switch $n_passToTry>>
  <<case `PW_fuckToy` `PW_lance`>>
    Ivex says, "There will be plenty of time for that later.
    No distractions now."
  <<default>>
    Ivex says, "No distractions now."
  <</switch>>
  He touches his fingers to Nero's jaw.
  "Focus on the task in front of you."

<<case `IC_begForMe`>>
  <<vi-always n_candleLit false>>
  ?P
  <<switch $n_passToTry>>
  <<case `PW_fuckToy` `PW_lance`>>
    Ivex snorts. "Is that the punishment you wish to endure?
    That is not <em>begging</em>."
  <<default>>
    Ivex snorts. "That is not a sensible answer to my question.
    Perhaps you should try begging."
  <</switch>>

<<case `IC_comfortable`>>
  <<vi-always n_candleLit true>>
  ?P
  <<switch $n_passToTry>>
  <<case `PW_fuckToy` `PW_lance`>>
    Ivex says, "There will be plenty of time for that later.
    First things first. Are you comfortable?"
  <<default>>
    Ivex growls. "That is not an answer to my question.
    Are you comfortable?"
  <</switch>>

<<case `IC_whoSentYou`>>
  <<vi-always n_candleLit true>>
  ?P
  <<switch $n_passToTry>>
  <<default>>
    Ivex chuckles. "A funny answer. The candle makes you more
    idiotic than I would have expected."
  <</switch>>

<<default>>
  <<mt-fail unhandled ivexContext $n_ivexContext>>
<</switch>>

?P
The Sprite ?sprSays,
<span class=sprite-q>"Hm, that
<b id="clue-cut"></b>
password doesn't sound right either, ?master
Please hold while I double-check that one, ?master"</span>

?P
<<switch _numTried>>
<<case 1>>
  <<if $n_candleHorny>>
    It starts loudly humming a vigorous tune that throbs to the beat of the
    flickering red candle.
    Nero is feeling optimistic about the Sprite's feelings for him.
    He nods his head to the rhythm.

  <<else>>
    It starts <em>loudly</em> humming that annoying children's tune again.
    Nero shakes his head.
  <</if>>

<<case 2>>
  <<if $n_candleHorny>>
    It starts humming its erotic tune at a much faster pace.
    Nero is thrilled by this acceleration of their relationship.
    He gasps in delight.
  <<else>>
    It unfortunately starts <em>loudly</em> humming that
    annoying children's tune,
    but at a much faster tempo than before.
    The music sounds like a bard overcome by Stalver's Jittering Dementia.
    Nero groans.
  <</if>>

<<case 3>>
  <<if $n_candleHorny>>
    It starts screaming in ecstasy in the wolf's ear.
    Nero is delighted that <em>this</em> password has driven the
    Sprite to new heights of pleasure.
    He's confident that it will soon reach a climax,
    and they will soon be able to climax together.
  <<else>>
    It starts <em>screeching</em> in an irregular pattern.
    Nero is appalled. Is the Sprite broken?
    
    ?P
    A few moments later, the wolf notices that the irregular screeching is
    a <em>repeating</em> irregular pattern, and each repeat adds a small
    variation to the screeching.
    He realizes that this must be the song <em>Stop the Music</em>.
    Nero twitches his ear at the panther's weird taste in music.
  <</if>>
<</switch>>

?P
$n_afterAction

/* note n_passToTry can be changed above */
<<run
  $n_magicPhase = MP_onHold;
  _tried = JSON.parse($n_passTried || "[]");
  _tried.unshift($n_passToTry);
  $n_passTried = JSON.stringify(_tried);
>>
<</nobr>>
