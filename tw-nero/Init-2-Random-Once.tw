:: Init 2 Random Once [inclusion] {"position":"2850,600","size":"100,100"}
<<script>>
const EM = ErrorMessage;
const VI = VarInfo;

/**
 * <<random-once seenVar>>
 * <<ro-choice>>
 *     text
 * <<ro-choice $condition>>
 *     text
 * <<ro-choice false>>
 *     placeholder for deleted choice, to avoid breaking saved games
 * <</random-once>>
 */
Macro.delete("random-once");
Macro.add("random-once", {
  tags: ["ro-choice"],
  handler: function() {
    const shown = this.args[0];
    const valid = new Set();
    for (let i = 1; i < this.payload.length; i++) {
      const cond = this.payload[i].args.full;
      if (cond === "" || eval(cond)) {
        valid.add(i);
      }
    }

    if (valid.size === 0) {
      EM.fail(`random-once should have valid choices`);
      return;
    }

    const V = State.variables;
    V[shown] || (V[shown] = []);

    let avail = new Set(valid);
    V[shown].forEach(i => avail.delete(i));

    if (avail.size === 0) {
      avail = new Set(valid);
      if (avail.size > 1 && V[shown].length > 0) {
        avail.delete(V[shown][V[shown].length - 1]);
      }
      V[shown] = [];
    }

    const choice = MagesTower.pick(avail);
    V[shown].push(choice);

    $(this.output).wiki(this.payload[choice].contents);

    if (setup.debug && valid.size > 1) {
      const outer = $("<span class=ro-debug>").appendTo(this.output);
      const val = V[shown];
      outer.append("&#x1f527;");
      $("<a>").html("&#x1f3b2;")
        .appendTo(outer)
        .click(() => VI.revisitHere(() => {
          State.variables[shown] = val;
        }));
    }
  }
});
<</script>>\
