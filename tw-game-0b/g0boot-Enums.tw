:: g0boot Enums [inclusion] {"position":"375,275","size":"100,100"}
<<script>>

/** Map of enumType: string => enumValueNames: string[] */
MT.enums = {};

/** Map of varName: string => enumType: string */
MT.enumVars = {};

/**
 * Define an enum. Value names are added as window globals,
 * so that typo-ing an enum value will throw an error.
 */
function defineEnum(enumType, valueNames) {
  MT.enums[enumType] = valueNames;
  valueNames.forEach((n, i) => window[n] = i);
};

/** Declare `varName` to be an enum of `enumType` */
function declareVarEnum(varName, enumType) {
  if (!MT.enums[enumType]) throw new Error(`No enum named ${enumType}`);
  MT.enumVars[varName] = enumType;
};

/**
 * Returns the symbolic name of `value`` for an enum.
 * `name` is either a var name or an enum type.
 */
MT.enumSymbol = (name, value) => {
  const en = MT.enums[MT.enumVars[name] || name];
  return en == null ? value : (en[value] || value);
};

/* Nero magic phase. */
defineEnum("MagicPhase", [
  "MP_beforeCast",
  "MP_triedMagic",
  "MP_wantDevice",
  "MP_wantName",
  "MP_wantTouch",
  "MP_wantPass",
  "MP_onHold",
  "MP_exitingHold",
  "MP_contact",
  "MP_lockedOut",
  "MP_drained", // had mageSight, but didn't connect to Sprite
  "MP_tapLost",  // did connect to Sprite
]);

declareVarEnum("n_magicPhase", "MagicPhase");
declareVarEnum("n_magicPhaseReached", "MagicPhase");

/*
 * Places where Ivex has asked a question, and may be near enough to hear
 * Nero trying to talk to the Sprite.
 */
defineEnum("IvexContext", [
  "IC_distant",
  "IC_gone",
  "IC_guildName", // recruit > Skeptical
  "IC_mindControl", // recruit > Fascinated
  "IC_explainTheft", // recruit > Ivex Trap
  "IC_obeyMe", // collab > Ivex Demanding
  "IC_lickPaw", // collab > Ivex Dominant
  "IC_begForMe", // collab > Ivex Cruel
  "IC_comfortable", // candle lit > Comfort Check
  "IC_whoSentYou", // candle horny > Light Squeeze, Heavy Squeeze
]);

declareVarEnum("n_ivexContext", "IvexContext");

/** Initialize enums that are generally expected to be non-null */
MT.enumInit = () => {
  MT.untraced(() => {
    const V = State.variables;
    if (!V.n_magicPhase) V.n_magicPhase = MP_beforeCast;
    if (!V.n_magicPhaseReached) V.n_magicPhaseReached = MP_beforeCast;
    if (!V.n_ivexContext) V.n_ivexContext = IC_distant;
  });
}

// This should run before any other Nero :passagestart
$(document).on(":passagestart", MT.enumInit);

<</script>>
