:: Init Sections [inclusion] {"position":"2825,1150","size":"100,100"}
<<script>>

// Passages are grouped into sections by a prefix in their title.
// - Prefix should start with a lowercase letter.
// - Prefix can contain lowercase letters and numbers.
// - Prefix should end with `-` or space.

const sectionDefs = {

  // Passages not specific to a character
  mt: {},

  // Nero passages that aren't part of the story
  n0: {},

  // Nero 1F intro
  n1a: {},

  // Nero convo, neutral mood
  n1cn: {},

  // Nero convo, Ivex receptive
  n1cr: {},

  // Nero convo, subby mood
  n1cs: {},

  // Nero convo, transition to candle
  n1cx: {},

  // Nero candle lit
  n1d: {},
  
  // Nero candle horny
  n1e: {},

  // Nero clever
  n1f: {},

  // Nero barbs choice
  n1p: {},

  // Nero magic/sprite
  n1s: {},

  // Nero looking
  n1x: {},

  // Nero horny looking
  n1y: {},

  // Nero 1F alone intro
  n2a: {},

  // Nero alone with candle
  n2b: {},

  // Nero escaping cross
  n2c: {},

  // Nero free on 1F
  n2f: {},

  // Nero looking while free
  n2x: {},

  // Nero 2F sketch
  n3a: {},

  // Nero 1F endings
  n9a: {},

  // Nero 2F endings
  n9e: {},

  // Nero escaped endings
  n9x: {},

  // Anything else
  other: {},
};


/** Returns section name of passageTitle. */
MT.sectionOf = (passageTitle) => {
  const re = /^([a-z][a-z0-9]+)[- ]/;
  const m = re.exec(passageTitle);
  return m ? m[1] : "other";
};

/** Returns section name of current passage. */
MT.sectionHere = () => MT.sectionOf(State.passage);

/** Verifies sections are defined. */
function checkSections() {
  if (!setup.debug) return;

  const reported = new Set();
  Story.lookup().forEach(p => {
    const sect = MT.sectionOf(p.title);
    if (!sectionDefs[sect] && !reported.has(sect)) {
      console.error(`[\[${p.title}]] section ${sect} not defined`);
      reported.add(sect);
    }
  });
}

checkSections();

<</script>>
