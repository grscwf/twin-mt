:: n2b-F Compute Arousal [mt-ready inclusion] {"position":"5150,5875","size":"100,100"}
<<script>>
const V = State.variables;
const actions = Math.max(V.t_patienceActions, 0);
const looks = Math.max(V.t_patienceLooks, 0);

const compute = (looks, actions) => {
  if (looks > 6) {
    throw new Error(`BUG: compute arousal looks ${looks}`);
  } else if (actions === 0 || looks === 0) {
    return 100;
  } else if (looks === 1 || actions === 1) {
    // reducing looks or actions to 1 also sets the other to 1
    return 96;
  } else if (looks === 2) {
    return 92 - (actions - 2) * 8;
  } else if (actions === 2) {
    return 92 - (looks - 2) * 8;
  } else if (actions === 3) {
    return 84 - (looks - 2) * 15;
  } else {
    throw new Error(`BUG: compute arousal looks ${looks} actions ${actions}`);
  }
}

V.n2_arousal = compute(looks, actions);
V.n1_candleHorny = looks <= 3 || actions <= 2;
V.n2_candleNearMax = looks === 1 || actions === 1;
V.n2_candleMax = looks === 0 || actions === 0;

function showTable() {
  for (let ac = 3; ac > 0; ac--) {
    let line = "";
    for (let lk = 5; lk > 0; lk--) {
      const c = compute(lk, ac);
      line += " " + String(c).padStart(3);
    }
    console.log(line);
  }
}

// showTable();
<</script>>\
