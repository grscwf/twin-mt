:: g1m Archives Script [inclusion] {"position":"225,1325","size":"100,100"}
<<script>>

const T = State.temporary;
const V = State.variables;

T.open = which => {
  $(".arc-closable").removeClass("arc-open");
  $(".arc-switch").text("(show)");
  $(`.arc-closable-${which}`).addClass("arc-open");
  $(`.arc-switch-${which}`).text("(hide)");
};

T.toggle = which => {
  const now = session.get("arc-open");
  const next = now === which ? "none" : which;
  session.set("arc-open", next);
  T.open(next);
};

T.switch = which => {
  let mkp =
    `<a class="arc-switch arc-switch-${which}"` +
    ` onclick="SugarCube.State.temporary.toggle('${which}')"` +
    `>(show)</a>`;
  return mkp;
};

function lockpickSetup() {
  if (!setup.debug) return;
  T.lockpick = setup.debug && session.get("arc-lockpick");
  $(document).one(":passagedisplay", () => {
    const el = $("#arc-lockpick");
    el.prop("checked", T.lockpick);
    el.on("input", lockpickUpdate);
  });
}

function lockpickUpdate() {
  const el = $("#arc-lockpick");
  const val = !!el.prop("checked");
  session.set("arc-lockpick", val);
  MT.revisitHere();
}

function countUnlocks() {
  const entries = MT.mdEntries();
  const truthyKeys = entries.filter(([k, v]) => v).map(([k, v]) => k);
  const truthy = new Set(truthyKeys);

  const count = (keys, reveal) => {
    const unlocked = keys.filter(k => truthy.has(k)).length;
    const total = (reveal || T.lockpick) ? keys.length : "?";
    return `${unlocked} of ${total}`;
  };

  T.drekkarEndingsUnlocked = count(
    MT.drekkarEndings, V.de3_IvexPunishment);
  T.neroEndingsUnlocked = count(
    Object.keys(MT.neroEndings), V.n0_playerLeftStudyWithMirror);
  T.neroKeywordsUnlocked = count(
    Object.keys(MT.neroKeywords), V.n0_playerLeftStudyWithMirror);
}

function archivesInit() {
  $(document).one(":passagedisplay", () => {
    const now = session.get("arc-open");
    T.open(now || "intro");
  });
  lockpickSetup();
  countUnlocks();
}

archivesInit();

<</script>>\