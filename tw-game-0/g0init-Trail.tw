:: g0init Trail [inclusion] {"position":"675,1100","size":"100,100"}

<<append head>>
<style>

.trail-group {
  line-height: 1.2;
  margin-bottom: 16px;
}

.trail-item {
  border: 1px solid #444;
  border-radius: 2px;
  display: inline-block;
  height: 40px;
  width: 40px;
}
.trail-item:not(:last-child) {
  margin-right: 4px;
}
@media (pointer: fine) {
  .trail-item {
    height: 20px;
    width: 20px;
  }
}

.trail-small-box {
  border: 1px solid #444;
  border-radius: 2px;
  display: inline-block;
  height: 10px;
  width: 10px;
}

.trail-current {
  background-color: #ca2;
}
.trail-recent {
  background-color: #5a3;
}
.trail-all {
  background-color: #559;
}

</style>
<</append>>

<<script>>

/** Record of passage title -> info */
const passageInfo = {};

/** Ordered list of section names */
const sectNames = [];

/** Record of section name -> array of titles */
const sections = {};

/** expose state for easier debugging */
MT.trail = { passageInfo, sectNames, sections }

function gatherPassages() {
  const all = Story.lookup();

  for (const p of all) {
    if (p.tags.includes("inclusion")) continue;
    if (p.tags.includes("is-menu")) continue;
    if (p.tags.includes("mt-sketch")) continue;

    const m = /^[n]\d\w*\b/.exec(p.title);
    if (m == null) continue;

    const sect = m[0];
    sections[sect] ||= [];
    sections[sect].push(p.title);

    passageInfo[p.title] = { };
  }

  sectNames.push(... Object.keys(sections).sort());

  for (const titles of Object.values(sections)) {
    titles.sort();
  }
}

MT.trailRender = (out) => {
  const current = new Set(State.history.map(m => m.title));

  for (const sect of sectNames) {
    const group = $(`<div class=trail-group>`).appendTo(out);
    for (const title of sections[sect]) {
      const item = $(`<div class=trail-item>`)
        .attr("title", title)
        .toggleClass("trail-current", current.has(title))
        .appendTo(group);
    }
  }
};

function trailInit() {
  if (!setup.playtest) return;
  gatherPassages();
}

trailInit();

<</script>>