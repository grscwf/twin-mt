:: g0init Visited Passages [inclusion] {"position":"2175,800","size":"100,100"}
<<append head>><style>

@media(hover: none) {
  a.vp-link-visited,
  a.vp-link-visited:hover {
    opacity: 0.8;
    text-decoration: line-through;
  }
}
@media(hover: hover) {
  #passages:hover a.vp-link-visited {
    opacity: 0.8;
    text-decoration: line-through;
  }
}

</style><</append>>
<<script>>

MT.visitedMarksEnabled = () => State.metadata.get("mark-visited");
MT.visitedEnableMarks = val => State.metadata.set("mark-visited", val);

let visited = new Set();

MT.visitedHas = title => visited.has(title);

MT.visitedClear = () => {
  visited = new Set();
  State.metadata.delete("visited");
};

function add(title) {
  visited.add(title);
  State.metadata.set("visited", visited);
};

function initVisited() {
  // remove legacy state
  localStorage.removeItem("vp-1");
  localStorage.removeItem("vp-marks-enabled");

  if (!setup.debug) return;

  const v = State.metadata.get("visited");
  if (v instanceof Set) {
    visited = v;
  }

  $(document).on(":passageend", () => {
    if (/^n/.test(State.passage)) add(State.passage);
    if (MT.visitedMarksEnabled()) {
      $("#passages a[data-passage]").each((i, el) => {
        const title = $(el).attr("data-passage");
        if (/^n/.test(title) && MT.visitedHas(title)) {
          $(el).addClass("vp-link-visited");
        }
      });
    }
  });
}

initVisited();

<</script>>
