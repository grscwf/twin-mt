:: n0/F Jump To [noreturn] {"position":"3100,1475","size":"100,100"}
<<nobr>>
<<auto-stow>>

<<return-head>>

<style>

#jump-path {
  border: 1px solid #666;
  border-radius: 4px;
  color: #999;
  font: 12px monospace;
  margin-top: 4px;
  padding: 8px;
  word-break: break-all;
  white-space: pre-wrap;
}

.jump-cmp::after {
  color: #ccc;
  margin-left: .5em;
}

.jump-cmp-same::after {
  content: " \2190  you are here";
}

</style>

[[> Test Page|testing]]
?P

<<link [[> Title Screen|Title Screen]]>>
    <<run MagesTower.forgetWalkHistory()>>
<</link>>
<br>

<<script>>

const jumps = [
  {
    title: "Bound",
    path: [],
  },

  "--",
  {
    title: "Nero start",
    path: [
      "n1a/F Nero Start"
    ],
  },
  {
    title: "Nero first action, abused",
    path: [
      "n1a/F Nero Start",
      "n1a/F Feign Sleep 1",
      "n1cn/F Ivex Intro 2",
      "n1cn/F First Action (5,2)",
    ],
  },
  {
    title: "Nero first action, naked, smooth",
    vars: {
      n0_barbsSlowViewed: false
    },
    path: [
      "n1a/F Nero Start",
      "n1a/F Endgame 1",
      "n1a/F Endgame 2",
      "n1p/F Barbs Slow 6n1",
      "n1a/F Endgame 4",
      "n1cn/F Ivex Intro 2",
      "n1cn/F First Action (5,2)",
    ],
  },
  {
    title: "Nero first action, normal",
    path: [
      "n1a/F Nero Start",
      "n1a/F Hello 1",
      "n1cn/F Ivex Intro 2",
      "n1cn/F First Action (5,2)",
    ],
  },

  "--",
  {
    title: "Nero subby, abused",
    path: [
      "n1a/F Nero Start",
      "n1a/F Feign Sleep 1",
      "n1cn/F Ivex Intro 2",
      "n1cn/F Charm",
      "n1cn/F Collab",
      "n1cn/F Apprentice",
      "n1cr/F Ivex Demanding (4,2)"
    ],
  },
  {
    title: "Nero subby, normal",
    path: [
      "n1a/F Nero Start",
      "n1a/F Hello 1",
      "n1cn/F Ivex Intro 2",
      "n1cn/F Charm",
      "n1cn/F Collab",
      "n1cn/F Apprentice",
      "n1cr/F Ivex Demanding (4,2)"
    ],
  },
  {
    title: "Nero subby, naked, smooth",
    vars: {
      n0_barbsSlowViewed: false
    },
    path: [
      "n1a/F Nero Start",
      "n1a/F Endgame 1",
      "n1a/F Endgame 2",
      "n1p/F Barbs Slow 6n1",
      "n1a/F Endgame 4",
      "n1cn/F Ivex Intro 2",
      "n1cn/F First Action (5,2)",
      "n1cn/F Charm",
      "n1cn/F Collab",
      "n1cn/F Apprentice",
      "n1cr/F Ivex Demanding (4,2)"
    ],
  },

  "--",
  {
    title: "Nero alone, normal, barbs",
    vars: {
      n0_barbsFastViewed: false,
    },
    path: [
      "n1a/F Nero Start",
      "n1a/F Hello 1",
      "n1cn/F Ivex Intro 2",
      "n1cn/F Rebuff",
      "n1d/F Strip Resist",
      {
        "code": "$n1_barbs = true",
        "title": "n1p/F Barbs Fast 5"
      },
      "n1d/F Cock Rise 1",
      "n1e/F Snap Jaws",
      "n1e/F Crop 1",
      "n2b/F Alone (5,3)"
    ],
  },
  {
    title: "Nero alone, last chance, normal, barbs",
    vars: {
      n0_barbsFastViewed: false,
    },
    path: [
      "n1a/F Nero Start",
      "n1a/F Hello 1",
      "n1cn/F Ivex Intro 2",
      "n1cn/F Rebuff",
      "n1d/F Strip Resist",
      {
        "code": "$n1_barbs = true",
        "title": "n1p/F Barbs Fast 5"
      },
      "n1d/F Cock Rise 1",
      "n1e/F Snap Jaws",
      {
        "code": "//1",
        "title": "n1e/F Crop 1"
      },
      "n1s/F Cast Alone 1",
      "n1s/F Cast Alone 2",
      "n2b/F Alone (5,3)",
      "n1s/F Cast Sight Horny",
      "n1y/F Horny Candle",
      "n1y/F Horny Mirror",
      "n1y/F Horny Grav",
      "n2b/F Struggle Horny 1",
      "n2b/F Alone (5,3)",
    ],
  },
];

State.temporary.listJumps = () => {
  const currentPath = MagesTower.getPath();

  const comparePaths = (p, q) => {
    for (let i = 0; i < p.length; i++) {
      if (i >= q.length) return "extends";
      if (typeof p[i] === "string") {
        if (p[i] !== q[i]) return "different";
      } else {
        if (p[i].title !== q[i].title) return "different";
        if (p[i].code !== q[i].code) return "different";
      }
    }
    if (p.length < q.length) return "begins";
    return "same";
  };

  let mkp = "<<nobr>>";
  for (const j of jumps) {
    if (j === "--") {
      mkp += "<br>";
      continue;
    } else if (j === "----") {
      mkp += "<hr>";
      continue;
    }
    const cmp = comparePaths(j.path, currentPath);
    mkp += `<div class="jump-cmp jump-cmp-${cmp}">`;
    mkp += `<<link "> ${j.title}">>`;
    mkp += `<<run _doJump("${j.title}")>>`;
    mkp += `<</link>>`;
    mkp += '</div>';
  }
  mkp += "<</nobr>>";
  return mkp;
};

State.temporary.doJump = title => {
  MagesTower.forgetWalkHistory();
  const jump = jumps.find(j => j.title === title);
  if (jump == null) throw new Error(`Unknown jump: ${title}`);
  Engine.play("Bound");
  if (jump.vars != null) {
    for (const vn of Object.keys(jump.vars)) {
      State.variables[vn] = jump.vars[vn];
    }
  }
  MagesTower.seekStart(jump.path);
};

<</script>>

<<= _listJumps()>>

<hr>
Current path:
<br>
<textarea id="jump-path" rows="20" readonly></textarea>
<<done>>
    <<run $("#jump-path").val(
      JSON.stringify(MagesTower.getPath(), null, 2)
    )>>
<</done>>
  
<</nobr>>
