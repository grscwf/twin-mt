:: Init 5c Nero Ending [inclusion] {"position":"3250,1975","size":"100,100"}
<<script>>

const EM = window.ErrorMessage || (window.ErrorMessage = {});

Nero.endings = {
  tamed_harsh: {
    title: "Bad Ending: Tamed (Harsh)",
    passages: [
        "[[n9a/F Tamed]]",
    	"[[n9a/F Tamed Harsh 1]]",
    	"[[n9a/F Tamed Harsh 2]]",
    	"[[n9a/F Tamed Harsh 3]]",
    	"[[n9a/F Tamed Harsh 4]]",
    	"[[n9a/F Tamed Harsh 5]]",
    	"[[n9a/D Tamed Harsh 6]]",
    	"[[n9a/D Tamed Harsh 7]]",
    	"[[n9a/D Tamed Harsh 8]]",
    	"[[n9a/D Tamed Harsh 9]]",
    ]
  },
  tamed_mild: {
    title: "Bad Ending: Tamed (Mild)",
    passages: [
        "[[n9a/F Tamed]]",
        "[[n9a/F Tamed Mild 1]]",
        "[[n9a/F Tamed Mild 2]]",
        "[[n9a/F Tamed Mild 3]]",
        "[[n9a/F Tamed Mild 4]]",
        "[[n9a/F Tamed Mild 5]]",
        "[[n9a/F Tamed Mild 6]]",
        "[[n9a/F Tamed Mild 7]]",
        "[[n9a/D Tamed Mild 8]]",
        "[[n9a/D Tamed Mild 9]]",
    ]
  }
};

Nero.showEnding = info => {
  const [name, barbOption, variant] = info;
  const key = name + (variant == null ? "" : `_${variant}`);
  const barbs = barbOption === "barbs";
  const barbsText = barbs ? "(Barbs)" : "(Smooth)";

  const end = Nero.endings[key];
  if (end == null) return `Unknown ending ${key}`;

  let mkp = "<<nobr>>";
  mkp += `<div class=ui-title>${end.title} ${barbsText}</div>\n`;
  mkp += `<hr>\n`;
  for (let i = 0; i < end.passages.length; i++) {
    if (i !== 0) mkp += "<hr>\n";
    mkp += `<<arc-include ${end.passages[i]} "$n1_barbs = ${barbs}">>\n`;
  }
  mkp += "<</nobr>>";
  return mkp;
};

<</script>>
