:: n1x Cabinets [mt-ready] {"position":"12400,1000","size":"100,100"}
<<nobr>>
<<vi-ignore n2_ivexGone>>

<<em-assert $n1_mageSight && $n2_free ? $n2_tooClever : true>>
<<em-assert $n1_cabinetsMageSight && !$n2_free ? $n1_mageSight : true>>

<<if $n1_mageSight>>
  Against the walls of the room are several cabinets that
  are identical in shape and size, but colored differently,
  with distinctly colored drawers that are all closed.
  <<if $n1_candleLit>>
    The drawer that the
    <<mtn "n1x Candle">>flickering red candle<</mtn>>
    came from is red, and its cabinet is also red.
    ?P
  <</if>>
  The cabinets appear to be made of wood,
  <<if $n2_wandExploded>>
    but they were not damaged by
    the wand's explosion.
    The blackened areas are surface residues that wipe off easily,
    and the bright colors beneath
  <<else>>
    but the colors
  <</if>>
  seem to be <em>in</em> the wood, not an illusion or paint on top.
  ?P
  One cabinet is different.
  It's the same size and shape as the others,
  but it does not have magic in its construction,
  and it appears to actually be wood,
  <<= $n2_wandExploded ? "slightly burnt," : "">>
  without unnatural color.
  ?P
  On top of the uncolored cabinet

<<elseif $n1_cabinetsMageSight>>
  <<vi-always n1_candleLit false>>
  Against the walls of the room are several cabinets that
  are unlikely to be wood, despite their appearance.
  They're identical in shape and size, but colored differently.
  Each has distinctly colored drawers that are all closed.
  ?P
  One cabinet is not colored, and it might actually be wood.
  On top of it

<<else>>
  Against the walls of the room are several wooden cabinets that
  seem identical in shape and size, but painted differently.
  Each has distinctly colored drawers that are all closed.
  <<if $n1_candleLit>>
    The drawer that the
    <<mtn "n1x Candle">>flickering red candle<</mtn>>
    came from is red, and its cabinet is also red.
  <</if>>
  ?P
  One of the cabinets is unpainted, and on top of it
<</if>>

is
<<if $n2_wandExploded>>
  an <<mtn "n1x Bottle">>enormous cracked bottle<</mtn>>
<<elseif $n1_bottleViewed>>
  a <<mtn "n1x Bottle">>bottled horse cock<</mtn>>
<<else>>
  an <<mtn "n1x Bottle">>enormous glass bottle<</mtn>>
<</if>>

<<set _tail = $n2_coinsLanced ?
  " that's wearing a mangled-metal gag made from unspeakably lewd coins."
  : ".">>
<<if $n2_penguinFlown>>
  and the absence of a stuffed penguin.
<<elseif $n2_wandExploded && $n2_penguinTorn>>
  and a <<mtn "n1x Penguin">>flaming, wing-less penguin<</mtn>>_tail
<<elseif $n2_wandExploded>>
  and a <<mtn "n1x Penguin">>flaming penguin<</mtn>>_tail
<<elseif $n2_penguinTorn>>
  and a <<mtn "n1x Penguin">>wing-less penguin<</mtn>>_tail
<<else>>
  and a <<mtn "n1x Penguin">>stuffed penguin<</mtn>>_tail
<</if>>

The others are bare.

?P
<<set _cabinet = $n1_mageSight || $n1_cabinetsMageSight
  ? "uncolored cabinet"
  : "unpainted cabinet">>

<<if $n2_cabinetsLanced && !$n2_cabinetsSearchedPlain>>
  Nero grins at the memory of throwing the drawers of the
  _cabinet out the window.
  ?P
<</if>>

<<if !$n2_free>>
  None of the cabinets seem particularly helpful to Nero in his
  current bound state.

<<elseif $n2_cabinetsSearchedPlain>>
  <<vi-always n2_cabinetsSearched true>>
  Nero cringes at the memory of what
  <<if $n2_cabinetsLanced>>
    was <em>in</em> the [[_cabinet|n2x Cabinet Memory]]
    before he threw the drawers out the window.
    That was
  <<else>>
    is <em>in</em> the [[_cabinet|n2x Cabinet Memory]].
    That is
  <</if>>
  clearly not a place <em>anyone</em> would store a missing heirloom.
  ?P
  It might be in one of the other cabinets, but Nero does not know how
  to open them.
  <<if $n2_tooClever && !$n2_cabinetsLanced>>
    Perhaps Nackle can help.
  <<else>>
    He will have to try later, when he has more magic.
  <</if>>

<<elseif $n2_cabinetsSearched>>
  <<vi-always n2_cabinetsLanced true>>
  The missing heirloom might be in one of the other
  cabinets, but Nero does not know how
  to open them.
  <<if $n2_tooClever && !$n2_cabinetsLanced>>
    Perhaps Nackle can help.
  <<else>>
    He will have to try later, when he has more magic.
  <</if>>

<<else>>
  Did Ivex store the missing heirloom in
  <<= $n2_cabinetsLanced ? "another" : "a">>
  cabinet? There are quite a few of them to search,
  but it should not take much time to
  check them all.
<</if>>

?P
<ul class=actions>
  <<if $n2_free && !$n2_cabinetsSearched>>
    <li>[[Search the cabinets.|n2x Cabinet Search]]</li>
  <</if>>
  <<if $n2_tooClever && !$n2_cabinetsLanced>>
    <li>[[Destroy some cabinets with Nackle.|n2x Lance Cabinets]]</li>
  <</if>>
  <li>$t_afterLook</li>
</ul>

<<set $n1_cabinetsViewed = true>>
<<set $n1_mageSight && ($n1_cabinetsMageSight = true)>>
<</nobr>>
