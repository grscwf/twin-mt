:: n1x Look Normal [mt-ready inclusion] {"position":"5400,1000","size":"100,200"}
<<nobr>>

<<set _desk =
  $n_deskCleared ? "grandiose desk"
  : $n_deskBurned ? "slightly-charred desk"
  : "cluttered desk">>
  
<<set _window =
  $n_windowBroken ? "broken window"
  : "prominent round window">>

<<set _map =
  $n_mapDefaced ? "defaced map"
  : $n_wandExploded ? "burning map"
  : "large map">>

<<set _painting =
  $n_paintingBlasted ? "tattered painting"
  : $n_paintingKnown ? "painting of Ivex's mother"
  : "painting of a pantheress">>

<<set _cabinet = $n_wandExploded ? "charred cabinet" : "cabinet">>
<<set _bookcases = $n_wandExploded ? "singed bookcases" : "bookcases">>

<<set if ($n_free || !$n_abused) {
  _worried = false;
} else if ($n_subby) {
  _worried = true;
} else if ($n_tough || MP_beforeCast === $n_magicPhase) {
  _worried = false;
} else {
  _worried = true;
}
>>

<<if _neroAppraise != null>>
  _neroAppraise

<<elseif !$n_ivexGone && !$n_free>>
  Nero
  <<= _worried ? MT.pick([
    "broods over",
    "frets over",
    "nervously reviews",
    "obsesses over",
    "suppresses anxiety about",
    "searches the facts of",
    "tries to calmly analyze",
    "worries over",
  ]) : MT.pick([
    "appraises",
    "assesses",
    "considers",
    "contemplates",
    "examines",
    "evaluates",
    "ponders",
    "reflects on",
  ])>>
  his situation.
<</if>>

<<if $n_free>>
  <<if $n_knifeTaken && $n_mirrorTaken>>
    <<mt-seen $n_dimMirror>>
      He's holding a <<mta "n1x Mirror">>magic mirror<</mta>>
    <</mt-seen>>
    <<mt-seen $n_dimKnife>>
      and a <<mta "n1x Knife">>letter opener<</mta>>,
    <</mt-seen>>
    while standing naked
  <<elseif $n_knifeTaken>>
    <<mt-seen $n_dimKnife>>
      He's holding a <<mta "n1x Knife">>letter opener<</mta>>
    <</mt-seen>>
    while standing naked
  <<elseif $n_mirrorTaken>>
    <<mt-seen $n_dimMirror>>
      He's holding a <<mta "n1x Mirror">>magic mirror<</mta>>
    <</mt-seen>>
    while standing naked
  <<else>>
    He's standing naked
  <</if>>
  in middle of
  <<if $n_wandExploded>>
    <<mt-seen $n_dimStudy>>
      a <<mta "n1x Study">>ruined study<</mta>>.
    <</mt-seen>>
  <<else>>
    <<mt-seen $n_dimStudy>>
      <<mta "n1x Study">>Ivex's study<</mta>>.
    <</mt-seen>>
  <</if>>

  <<if $n_wandExploded>>
    <<vi-always n_mageSight true>>
    A shaky web of exotic energy connects the few magic axioms
    that remain in the room.
    ?P
  <<elseif $n_mageSight>>
    A dense web of exotic energy fills the space,
    connecting a confusing variety of magic axioms together.
    ?P
  <</if>>

  <<if $n_crossBurnLanced>>
    The wooden cross is now a reeking
    pile of smoky scraps in a corner.
  <<elseif $n_crossScrapsBurned>>
    The wooden cross is now a cozy
    fire of splintered remnants in a corner.
  <<elseif $n_crossPartsBurned>>
    <<mt-seen $n_dimCross>>
      The <<mta "n1x Cross">>broken cross<</mta>>
    <</mt-seen>>
    is slowly being consumed by fire.
  <<elseif $n_crossLanced>>
    The wooden cross is now a piss-stained heap of
    splintered remnants in a corner.
  <<else>>
    <<mt-seen $n_dimCross>>
      The <<mta "n1x Cross">>wooden cross<</mta>>
    <</mt-seen>>
    <<= $n_tooClever ? "is broken and" : "has fallen over and is">>
    lying on the floor.
  <</if>>

  <<if $n_knifeOnFloor && $n_mirrorBroken>>
    <<mt-seen $n_dimKnife>>
      Near that is the <<mta "n1x Knife">>letter opener<</mta>>
    <</mt-seen>>
    <<mt-seen $n_dimMirror>>
      and the <<mta "n1x Mirror">>broken mirror<</mta>>.
    <</mt-seen>>
  <<elseif $n_knifeOnFloor>>
    <<mt-seen $n_dimKnife>>
      Near that is the <<mta "n1x Knife">>letter opener<</mta>>.
    <</mt-seen>>
  <<elseif $n_mirrorBroken>>
    <<mt-seen $n_dimMirror>>
      Near that is the <<mta "n1x Mirror">>broken mirror<</mta>>.
    <</mt-seen>>
  <</if>>
  ?P

<<else>>

  <<if $n_abused && $n_naked>>
    His groin still aches, and his exposed balls are trying to retreat
    into his body.
    He's completely naked and bound
  <<elseif $n_abused>>
    His groin still aches from the abuse of his balls.
    He's bound
  <<elseif $n_naked>>
    He's naked and bound
  <<else>>
    He's bound
  <</if>>
  with leather restraints to a
  <<mt-seen $n_dimCross>>
    <<mta "n1x Cross">>wooden cross<</mta>>
  <</mt-seen>>
  <<if $n_gravNoticed>>
    <<mt-seen todo>>
      that has <<mta "n1x Grav">>glowing crystals<</mta>> behind it,
    <</mt-seen>>
  <</if>>
  <<if !$n_studyViewed>>
    <<mt-seen $n_dimStudy>>
      in what looks like a <<mta "n1x Study">>mage's study<</mta>>.
    <</mt-seen>>
  <<else>>
    <<mt-seen $n_dimStudy>>
      in middle of <<mta "n1x Study">>Ivex's study<</mta>>.
    <</mt-seen>>
  <</if>>

  <<if $n_mageSight>>
    A dense web of exotic energy fills the space,
    connecting a confusing variety of magic axioms together.
    ?P
  <</if>>

<</if>>

<<if $n_studyViewed>>
  The only furniture is a
  <<mt-seen $n_dimDesk>>
    <<= $n_deskViewed ? "desk" : "[\[_desk|n1x Desk]]">>,
  <</mt-seen>>
  several
  <<mt-seen $n_dimCabinets>>
    <<= $n_cabinetsViewed ? "cabinets"
      : $n_wandExploded ? "[\[charred cabinets|n1x Cabinets]]"
      : "[\[cabinets|n1x Cabinets]]">>,
  <</mt-seen>>
  and many
  <<mt-seen $n_dimBookcases>>
    <<= $n_bookcasesViewed ? "bookcases" : "[\[_bookcases|n1x Bookcases]]">>.
  <</mt-seen>>
<</if>>

<<if $n_paintingLanced>>
  One wall has a
  <<mt-seen false>>
    <<if $n_doorOpened>>
      <<mta "n2f Door">>door<</mta>> that opens to a staircase going down.
    <<else>>
      <<mta "n2f Door">>door<</mta>>.
    <</if>>
  <</mt-seen>>
  <<mt-seen $n_dimWall>>
    The <<mta "n1x Wall">>opposite wall<</mta>> has
  <</mt-seen>>
  <<mt-seen $n_dimWindow>>
    a <<mta "n1x Window">>_window<</mta>> and
  <</mt-seen>>
  <<mt-seen $n_dimMap>>
    a <<mta "n1x Map">>_map<</mta>>.
  <</mt-seen>>

  In the corner by the map, a shredded painting of
  <<= $n_paintingKnown ? "Ivex's mother" : "a pantheress">>
  <<if $n_paintingBurned || $n_paintingBlasted>>
    is a smoking heap.
    <<if $n_paintingBillGone && !$n_deskHasBill>>
      The "Bill for Interior Design Consulting Services" has
      been destroyed by the blast.
      <<act [[n2x Replace Bill]]>>Replace the "Bill for Interior Design Consulting Services".<</act>>
    <</if>>
  <<elseif $n_paintingHasBill>>
    is an untidy heap,
    with a "Bill for Interior Design Consulting Services" on top.
  <<else>>
    is lying in a heap.
  <</if>>

<<elseif $n_wallViewed>>
  <<if $n_free>>
    <<mt-seen $n_dimWall>>
      One <<mta "n1x Wall">>wall<</mta>>
    <</mt-seen>>
  <<else>>
    <<mt-seen $n_dimWall>>
      The <<mta "n1x Wall">>far wall<</mta>>
    <</mt-seen>>
  <</if>>
  <<mt-seen $n_dimWindow>>
    has a <<mta "n1x Window">>_window<</mta>>,
  <</mt-seen>>
  <<mt-seen $n_dimMap>>
    a <<mta "n1x Map">>_map<</mta>>, and a
  <</mt-seen>>
  <<mt-seen $n_dimPainting>>
    <<mta "n1x Painting">>_painting<</mta>>.
  <</mt-seen>>

<<else>>
  <<= $n_free ? "One wall" : "The far wall">>
  <<mt-seen $n_dimWindow>>
    has a <<mta "n1x Window">>_window<</mta>>
  <</mt-seen>>
  <<mt-seen $n_dimWall>>
    and <<mta "n1x Wall">>some decorations<</mta>> on it.
  <</mt-seen>>
<</if>>

<<if $n_free && !$n_paintingLanced>>
  The opposite wall has a
  <<mt-seen false>>
    <<if $n_doorOpened>>
      <<mta "n2f Door">>door<</mta>> that opens to a staircase going down.
    <<else>>
      <<mta "n2f Door">>door<</mta>>.
    <</if>>
  <</mt-seen>>
<</if>>

?P
<<set _needP = false>>

<<set _deskBill = 'piss-soaked "Bill For Home Renovation:'
  + ' 899 Silvers, Due Yesterday"'>>
<<set _pillar = 'pink <span class=nobr>"CARPE DI"</span>'
  + ' and <span class=nobr>and "CK"</span> pillar fragments'
  + ' from the snow globe'>>
<<set _globe = $n_globeBroken ? "smashed snow globe" : "snow globe">>
<<set _clutterCorner = $n_paintingLanced ? "another corner" : "a corner">>

<<if $n_deskCleared>>
  <<mt-seen $n_dimDesk>>
    The <<mta "n1x Desk">>_desk<</mta>> is
  <</mt-seen>>
  <<if $n_deskHasBill && $n_deskHasPillar>>
    bare except for the _pillar,
    sitting on top of a _deskBill.
  <<elseif $n_deskHasBill>>
    bare except for a _deskBill.
  <<elseif $n_deskHasPillar>>
    bare except for the _pillar.
  <<else>>
    bare.
  <</if>>

  The clutter that used to be on the desk

  <<if $n_clutterCornerBurned>>
    is now a burnt mess of clutter in _clutterCorner.
  <<elseif $n_clutterInCorner>>
    has now become clutter in _clutterCorner.
  <<else>>
    has been blasted off and scattered on the floor.
  <</if>>

  <<if !$n_globeLanced>>
    <<mt-seen $n_dimGlobe>>
      The <<mta "n1x Globe">>_globe<</mta>> is
    <</mt-seen>>
    <<= $n_clutterInCorner ? "among that clutter" : "also on the floor">>.
  <</if>>
  ?P
  <<set _needP = false>>

<<elseif $n_deskViewed>>
  <<mt-seen $n_dimDesk>>
    The <<mta "n1x Desk">>_desk<</mta>> has
  <</mt-seen>>
  <<script>>
    State.temporary.listDesk = () => {
      const V = State.variables;
      const objs = [];
      if (!V.n_knifeTaken && !V.n_knifeOnFloor) {
        objs.push(
          `<<mt-seen $n_dimKnife>>`
          + "a [\[letter opener|n1x Knife]]"
          + `<</mt-seen>>`);
      }
      if (!V.n_globeLanced) {
        if (V.n_globeViewed) {
          objs.push(
            `<<mt-seen $n_dimGlobe>>`
            + "a [\[snow globe|n1x Globe]]"
            + `<</mt-seen>>`);
        } else {
          objs.push(
            `<<mt-seen $n_dimGlobe>>`
            + "an [\[arcane globe|n1x Globe]]"
            + `<</mt-seen>>`);
        }
      }
      if (!V.n_mirrorTaken && !V.n_mirrorBroken) {
        objs.push(
          `<<mt-seen $n_dimMirror>>`
          + "a <<mta [\[n1x Mirror]]>>?mirror<</mta>>"
          + `<</mt-seen>>`);
      }
      let desc = "";
      switch (objs.length) {
        case 0:
          if (V.n_deskBurned) desc += `a burnt mess of `;
          desc += `nothing useful`;
          break;
        case 1:
          desc += `${objs[0]} in the `;
          if (V.n_deskBurned) desc += "burnt ";
          desc += "mess";
          break;
        case 2:
          desc += `${objs[0]} and ${objs[1]}`;
          break;
        default: {
          const last = objs.pop();
          desc += `${objs.join(", ")}, and ${last}`;
          break;
        }
      }
      if (V.n_globeLanced) {
        desc += `, and a clear area in the middle has _pillar`;
      }
      desc += '.';
      return desc;
    };
  <</script>>
  <<= _listDesk()>>
  <<= $n_globeLanced ? "?P" : "">>
  <<set _needP = !$n_globeLanced>>
<</if>>

<<if $n_cabinetsViewed>>
  On top of
  <<if $n_cabinetsLanced>>
    <<mt-seen $n_dimCabinets>>
      the <<mta "n1x Cabinets">>_cabinet<</mta>>
    <</mt-seen>>
    without drawers, there is
  <<else>>
    <<mt-seen $n_dimCabinets>>
      one <<mta "n1x Cabinets">>_cabinet<</mta>> is
    <</mt-seen>>
  <</if>>

  <<if $n_wandExploded>>
    <<mt-seen $n_dimBottle>>
      an <<mta "n1x Bottle">>enormous cracked bottle<</mta>>
    <</mt-seen>>
  <<elseif $n_bottleViewed>>
    <<mt-seen $n_dimBottle>>
      a <<mta "n1x Bottle">>bottled horse cock<</mta>>
    <</mt-seen>>
  <<else>>
    <<mt-seen $n_dimBottle>>
      an <<mta "n1x Bottle">>enormous glass bottle<</mta>>
    <</mt-seen>>
  <</if>>

  <<run
    _penguin =
      $n_wandExploded && $n_penguinTorn
        ? "flaming, wing-less penguin"
      : $n_wandExploded
        ? "flaming penguin"
      : $n_penguinTorn
        ? "wing-less penguin"
      : "stuffed penguin";
    _tail =
      $n_coinsLanced
        ? ` that's wearing a mangled-metal gag`
          + ` made from unspeakably lewd coins.`
      : ".";
  >>
  <<if $n_penguinFlown>>
    and the absence of a stuffed penguin.
  <<else>>
    <<mt-seen $n_dimPenguin>>
      and a <<mta "n1x Penguin">>_penguin<</mta>>_tail
    <</mt-seen>>
  <</if>>
  <<= $n_deskCleared || $n_globeLanced ? "?P" : "">>
  <<set _needP = !$n_deskCleared && !$n_globeLanced>>
<</if>>

<<if $n_bookcasesViewed>>
  <<set _objs = []>>
  <<set _tail = ".">>

  <<set _booksLast = $n_bookcasesLanced || $n_booksLanced
    || $n_coinsInBook>>

  <<mt-seen $n_dimBookcases>>
    The <<mta "n1x Bookcases">>_bookcases<</mta>>
  <</mt-seen>>
  <<if _booksLast>>
    still have
  <<else>>
    have
    <<if $n_wandExploded>>
      <<set _objs.push(
        `<<mt-seen $n_dimBooks>>`
        + "numerous [\[scorched books|n1x Books]]"
        + `<</mt-seen>>`)>>
    <<else>>
      <<set _objs.push(
        `<<mt-seen $n_dimBooks>>`
        + "numerous [\[books|n1x Books]]"
        + `<</mt-seen>>`)>>
    <</if>>
  <</if>>

  <<if !$n_coinsLanced>>
    <<set _coins = $n_wandExploded ? "jumble of coins" : "stack of coins">>
    <<set _objs.push(
      `<<mt-seen $n_dimCoins>>`
      + `a [\[_coins|n1x Coins]]`
      + `<</mt-seen>>`)>>
  <</if>>

  <<set _wandOnShelf = !$n_wandRanAway
    && (!$n_wandUsed || $n_wandTubeShot)
    && !$n_wandExploded
    && !$n_wandLost
  >>

  <<if _wandOnShelf>>
    <<set _objs.push(
      `<<mt-seen $n_dimWand>>`
      + "a [\[magic wand|n1x Wand]]"
      + `<</mt-seen>>`)>>
  <</if>>

  <<if $n_pornLanced>>
    <<set _coinsInPorn = $n_coinsInPorn
    ? " with an orgy of mangled coins hidden inside"
    : "">>
    <<set _objs.push("a pile of sabotaged porn<<= _coinsInPorn>>")>>
  <</if>>

  <<if _booksLast>>
    <<set _coinsInBook = $n_coinsInBook
      ? ", one of which has an orgy of mangled coins hidden inside"
      : "">>

    <<if $n_wandExploded>>
      <<set _objs.push(
        `<<mt-seen $n_dimBooks>>`
        + "many [\[scorched books|n1x Books]]_coinsInBook"
        + `<</mt-seen>>`)>>
    <<else>>
      <<set _objs.push(
        `<<mt-seen $n_dimBooks>>`
        + "many [\[books|n1x Books]]_coinsInBook"
        + `<</mt-seen>>`)>>
    <</if>>
  <</if>>

  <<if $n_bookPileBurned>>
    <<set _tail = ", but the books from several shelves have"
      + " been thrown into a smoldering heap on the floor.">>
  <<elseif $n_bookShredsBurned>>
    <<set _tail = ", but the books from several shelves have"
      + " been shredded into in a smoldering heap on the floor.">>
  <<elseif $n_bookcasesLanced || $n_booksLanced>>
    <<set _tail = ", but the books from several shelves have been "
      + ($n_booksLanced ? "shredded" : "thrown")
      + " into a "
      + ($n_bookPileBurned ? "smoldering heap"
        : $n_bookShredsBurned ? "smoking heap of ashy remnants"
        : "chaotic heap")
      + " on the floor.">>
  <</if>>

  <<= _objs.length === 1 ? `${_objs[0]} in them${_tail}`
    : _objs.length === 2 ? `${_objs[0]} and ${_objs[1]}${_tail}`
    : (_last = _objs.pop(), `${_objs.join(", ")}, and ${_last}${_tail}`)
  >>
  <<if $n_wandRanAway>>
    Underneath one bookcase,
    <<mt-seen $n_dimWand>>
      an <<mta "n1x Wand">>alarming magic wand<</mta>>
    <</mt-seen>>
    is <em>growling</em>.
  <<elseif $n_wandUsed && !$n_wandTubeShot>>
    <<mt-seen $n_dimWand>>
      The <<mta "n1x Wand">>distressing magic wand<</mta>>
    <</mt-seen>>
    is on the floor, far away from the bookcase it came from.
  <<elseif $n_wandLost>>
    Ivex's absurd magic wand is outside, perhaps still falling
    to the ground below.
  <</if>>
  ?P
  <<set _needP = false>>
<</if>>

<<= _needP ? "?P" : "">>

<<if $n_candleLit && !$n_ivexGone>>
  <<mt-seen todo>>
    A <<mta "n1x Candle">>flickering red candle<</mta>>
  <</mt-seen>>
  at the corner of the desk is
  emitting a tantalizing, spicy aroma.
  ?P
<</if>>

<<set $n_upset && ($n_upset--)>>
<</nobr>>\
